version: "3.4"

services:
  php:
    build:
      context: ./api
      target: api_platform_php
    depends_on:
      - rabbitmq
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  transport:
    build:
      context: ./api
      target: api_platform_transport
    depends_on:
      - php
      - rabbitmq
    restart: unless-stopped
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    deploy:
      mode: replicated
      replicas: 2
      
  pwa:
    build:
      context: ./../SODC-React-Members
      target: react_app_prod
    restart: unless-stopped
#    environment:
#      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://caddy

  caddy:
    build:
      context: api/
      target: api_platform_caddy
    depends_on:
      - php
      - pwa
      - rabbitmq
    environment:
      PWA_UPSTREAM: pwa:3000
      SERVER_NAME: ${SERVER_NAME:-www.example.com, localhost, caddy:80}
      SERVER_ROOT: ${SERVER_ROOT:-example.com}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 443
        protocol: udp

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    volumes:
      - ./../rabbitmq:/var/lib/rabbitmq:cached
    hostname: sodc_rabbitmq
    restart: unless-stopped
    ports:
      - target: 15672
        published: 15672
        protocol: tcp

  # database:
  #   image: postgres:13-alpine
  #   environment:
  #     - POSTGRES_DB=api
  #     - POSTGRES_PASSWORD=!ChangeMe!
  #     - POSTGRES_USER=api-platform
  #   volumes:
  #     - db_data:/var/lib/postgresql/data:rw
  #     # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
  #     # - ./api/docker/db/data:/var/lib/postgresql/data:rw

volumes:
  php_socket:
  # db_data:
  caddy_data:
  caddy_config:
